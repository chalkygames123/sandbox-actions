name: Build

description: Build a project

inputs:
  project:
    description: The project to build
    required: true
  build-artifact-content-path:
    description: The path to the build artifact content
    required: true
  upload-artifact:
    description: Whether to upload the build artifact
    required: true

outputs:
  build-artifact-name:
    description: The name of the build artifact to upload
    value: ${{ steps.set-build-artifact-name.outputs.build-artifact-name }}

runs:
  using: composite
  steps:
    - uses: pnpm/action-setup@v3

    - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
      with:
        cache: pnpm
        node-version-file: package.json

    - run: pnpm install --filter="$PROJECT"
      shell: bash
      env:
        PROJECT: ${{ inputs.project }}

    - run: pnpm run --filter="$PROJECT" build
      shell: bash
      env:
        PROJECT: ${{ inputs.project }}

    - id: set-build-artifact-name
      name: Set output build-artifact-name
      run: echo "build-artifact-name=$PROJECT-build-artifact-run-$GITHUB_RUN_ID" >> "$GITHUB_OUTPUT"
      shell: bash
      env:
        PROJECT: ${{ inputs.project }}

    - name: Tar build artifact
      run: |
        mapfile -t args < <(grep '[^[:space:]]' <<< "$BUILD_ARTIFACT_PATH")
        tar cvf "${BUILD_ARTIFACT_NAME}.tar" "${args[@]}"
      shell: bash
      env:
        BUILD_ARTIFACT_PATH: ${{ inputs.build-artifact-content-path }}
        BUILD_ARTIFACT_NAME: ${{ steps.set-build-artifact-name.outputs.build-artifact-name }}

    - if: ${{ inputs.upload-artifact == 'true' }}
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
      with:
        name: ${{ steps.set-build-artifact-name.outputs.build-artifact-name }}
        path: ${{ steps.set-build-artifact-name.outputs.build-artifact-name }}.tar
        if-no-files-found: error
