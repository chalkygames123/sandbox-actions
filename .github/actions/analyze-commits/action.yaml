name: Analyze commits

description: Analyze commits to determine whether the project needs to be deployed

inputs:
  project:
    description: The project to analyze commits for
    required: true

outputs:
  needs-deploy:
    description: Whether the project needs to be deployed
    value: ${{ steps.set-needs-deploy.outputs.needs-deploy }}

runs:
  using: composite
  steps:
    # Check the commit prefix following the default release rules of the commit-analyzer plugin for semantic-release to determine whether the project needs to be deployed. For more information, see https://github.com/semantic-release/commit-analyzer#default-rules-matching.
    # The commits with one or more scopes are checked against the project name.
    - id: set-needs-deploy
      name: Set output needs-deploy
      run: |
        git branch --all --verbose --verbose

        mapfile -t messages < <(git log --pretty=format:"%s" "$BASE..$HEAD")

        for message in "${messages[@]}"; do
          prefix="${message%%:*}"
          type="${prefix%%[(!]*}"
          mapfile -t scopes < <(awk -F '[()]' '{print $2}' <<< "$prefix" | awk -F '[/\\\\,]' '{ for (i = 1; i <= NF; i++) print $i }' | awk '{$1=$1};1')

          for scope in "${scopes[@]}"; do
            if [[ $scope == 'no-release' ]]; then
              continue 2
            fi
          done

          if [[ $prefix =~ !$ || $type =~ ^(feat|fix|perf)$ ]]; then
            for scope in "${scopes[@]}"; do
              if [[ $scope == "$PROJECT" ]]; then
                echo 'needs-deploy=true' >> "$GITHUB_OUTPUT"

                exit 0
              fi
            done
          fi
        done

        echo 'needs-deploy=false' >> "$GITHUB_OUTPUT"
      shell: bash
      env:
        PROJECT: ${{ inputs.project }}
        BASE: ${{ github.event_name == 'pull_request' && format('origin/{0}', github.base_ref) || github.event_name == 'push' && github.event.before }}
        HEAD: ${{ github.event_name == 'pull_request' && format('origin/{0}', github.head_ref) || github.event_name == 'push' && github.event.after }}
