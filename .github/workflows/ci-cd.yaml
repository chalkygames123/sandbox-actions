name: CI/CD

on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    # branches:
    #   - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force-deploy:
        default: false
        description: 'Force Deploy workflow to run'
        type: boolean

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}

jobs:
  prepare:
    name: Prepare
    permissions:
      contents: read
      pull-requests: read # required in private repositories by dorny/paths-filter
    if: github.event_name != 'pull_request' || github.event.action != 'edited' || github.event.changes.base.ref.from == ''
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ github.ref_name == github.event.repository.default_branch && 'production' || 'preview' }}
      node-modules-cache-path: '**/node_modules/'
      node-modules-cache-key: ${{ steps.set-node-modules-cache-key.outputs.node-modules-cache-key }}
      src-changed: ${{ steps.filter.outputs.src }}
      workflows-changed: ${{ steps.filter.outputs.workflows }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - uses: actions/checkout@v4

      - id: set-node-modules-cache-key
        name: Set node_modules cache key
        run: echo "node-modules-cache-key=$RUNNER_OS-node-modules-${{ hashFiles('**/package-lock.json') }}" >> "$GITHUB_OUTPUT"

      - id: filter
        if: inputs.force-deploy == false
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - functions/**
              - public/**
              - astro.config.js
              - src/**
              - package-lock.json
              - package.json
              - tsconfig.json
            workflows:
              - .github/workflows/deploy.yaml
    timeout-minutes: 5

  check:
    name: Check
    needs:
      - prepare
    if: github.event_name != 'pull_request' || github.event.action != 'edited' || github.event.changes.base.ref.from == ''
    uses: ./.github/workflows/check.yaml
    with:
      node-modules-cache-path: ${{ needs.prepare.outputs.node-modules-cache-path }}
      node-modules-cache-key: ${{ needs.prepare.outputs.node-modules-cache-key }}
    secrets: inherit

  build:
    name: Build
    needs:
      - prepare
      - check
    if: github.event_name != 'pull_request' || github.event.action != 'edited' || github.event.changes.base.ref.from == ''
    uses: ./.github/workflows/build.yaml
    with:
      environment: ${{ needs.prepare.outputs.environment }}
      node-modules-cache-path: ${{ needs.prepare.outputs.node-modules-cache-path }}
      node-modules-cache-key: ${{ needs.prepare.outputs.node-modules-cache-key }}
    secrets: inherit

  deploy:
    name: Deploy
    permissions:
      actions: read # required in private repositories by unlike-ltd/github-actions-cloudflare-pages
      contents: read
      deployments: write # required by unlike-ltd/github-actions-cloudflare-pages
      pull-requests: write # required by unlike-ltd/github-actions-cloudflare-pages
    needs:
      - prepare
      - build
    if: github.event_name != 'pull_request' || github.event.action != 'edited' || github.event.changes.base.ref.from == '' || inputs.force-deploy || needs.prepare.outputs.src-changed == 'true' || needs.prepare.outputs.workflows-changed == 'true'
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: ${{ needs.prepare.outputs.environment }}
      build-artifact-name: ${{ needs.build.outputs.build-artifact-name }}
      build-artifact-download-dir: ${{ needs.build.outputs.build-artifact-download-dir }}
    secrets: inherit
