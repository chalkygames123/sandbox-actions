name: Build

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force-deploy:
        default: false
        description: 'Force Deploy workflow to run'
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    permissions:
      contents: read
      pull-requests: read # required by dorny/paths-filter
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
      node-modules-cache-path: ${{ steps.set-node-modules-cache-path.outputs.node-modules-cache-path }}
      node-modules-cache-key: ${{ steps.set-node-modules-cache-key.outputs.node-modules-cache-key }}
      build-artifact-name: ${{ steps.set-build-artifact-name.outputs.build-artifact-name }}
      stats-artifact-name: ${{ steps.set-stats-artifact-name.outputs.stats-artifact-name }}
      src-changed: ${{ steps.filter.outputs.src }}
      workflows-changed: ${{ steps.filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v4
      - id: set-environment
        name: Set environment
        run: echo "environment=$ENVIRONMENT" >> "$GITHUB_OUTPUT"
        env:
          ENVIRONMENT: ${{ github.ref_name == github.event.repository.default_branch && 'production' || 'preview' }}
      - uses: actions/setup-node@v4
        timeout-minutes: 1
        with:
          cache: npm
          node-version-file: package.json
      - id: set-node-modules-cache-path
        name: Set node_modules cache path
        run: echo "node-modules-cache-path=**/node_modules/" >> "$GITHUB_OUTPUT"
      - id: set-node-modules-cache-key
        name: Set node_modules cache key
        run: echo "node-modules-cache-key=$RUNNER_OS-node-modules-${{ hashFiles('**/package-lock.json') }}" >> "$GITHUB_OUTPUT"
      - id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-node-modules-cache-path.outputs.node-modules-cache-path }}
          key: ${{ steps.set-node-modules-cache-key.outputs.node-modules-cache-key }}
      - if: steps.cache.outputs.cache-hit != true
        run: npm ci
      - run: npm run build
      - id: set-build-artifact-name
        name: Set build artifact name
        run: echo "build-artifact-name=run-$GITHUB_RUN_ID-$ENVIRONMENT-build-artifact" >> "$GITHUB_OUTPUT"
        env:
          ENVIRONMENT: ${{ steps.set-environment.outputs.environment }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-build-artifact-name.outputs.build-artifact-name }}
          path: dist/
          if-no-files-found: error
      - id: set-stats-artifact-name
        name: Set stats artifact name
        run: echo "stats-artifact-name=run-$GITHUB_RUN_ID-$ENVIRONMENT-stats-artifact" >> "$GITHUB_OUTPUT"
        env:
          ENVIRONMENT: ${{ steps.set-environment.outputs.environment }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-stats-artifact-name.outputs.stats-artifact-name }}
          path: stats.html
          if-no-files-found: error
      - id: filter
        if: inputs.force-deploy == false
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - functions/**
              - public/**
              - astro.config.js
              - src/**
              - package-lock.json
              - package.json
              - tsconfig.json
            workflows:
              - .github/workflows/deploy.yaml
    timeout-minutes: 5
  deploy:
    name: Deploy
    permissions:
      actions: read # required by unlike-ltd/github-actions-cloudflare-pages
      contents: read
      deployments: write # required by unlike-ltd/github-actions-cloudflare-pages
      pull-requests: write # required by unlike-ltd/github-actions-cloudflare-pages
    needs:
      - build
    if: inputs.force-deploy || needs.build.outputs.src-changed == 'true' || needs.build.outputs.workflows-changed == 'true'
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: ${{ needs.build.outputs.environment }}
      node-modules-cache-path: ${{ needs.build.outputs.node-modules-cache-path }}
      node-modules-cache-key: ${{ needs.build.outputs.node-modules-cache-key }}
      build-artifact-name: ${{ needs.build.outputs.build-artifact-name }}
      build-artifact-download-dir: dist/
      stats-artifact-name: ${{ needs.build.outputs.stats-artifact-name }}
      stats-artifact-download-dir: ./
    secrets: inherit
