name: Build

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      build-artifacts-path:
        required: true
        type: string
    outputs:
      build-artifacts-name:
        description: The name of the build artifacts
        value: ${{ jobs.build.outputs.build-artifacts-name }}

env:
  PROJECT: ${{ inputs.project }}
  BUILD_ARTIFACTS_PATH: ${{ inputs.build-artifacts-path }}

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      build-artifacts-name: ${{ steps.set-build-artifacts-name.outputs.build-artifacts-name }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3

      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: package.json
        timeout-minutes: 1

      - run: pnpm install --filter="$PROJECT"

      - run: pnpm run --filter="$PROJECT" build

      - id: set-build-artifacts-name
        name: Set build artifacts name
        run: echo "build-artifacts-name=build-artifacts-run-$GITHUB_RUN_ID-$PROJECT" >> "$GITHUB_OUTPUT"

      - name: Tar build artifact
        run: |
          mapfile -t args <<< "$(echo "$BUILD_ARTIFACTS_PATH" | grep -E '[:space:]')"
          tar cvf "$BUILD_ARTIFACT_NAME".tar "${args[@]}"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-build-artifacts-name.outputs.build-artifacts-name }}
          path: ${{ inputs.build-artifacts-path }}
          if-no-files-found: error
    timeout-minutes: 5
