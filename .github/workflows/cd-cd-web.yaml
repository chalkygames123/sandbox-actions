name: CI/CD (web)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  # workflow_dispatch:
  #   inputs:
  #     force-deploy:
  #       description: Force deploy
  #       type: boolean

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  home:
    runs-on: ubuntu-latest
    env:
      CLASP_ACCESS_TOKEN: ${{ secrets.CLASP_ACCESS_TOKEN }}
      CLASP_CLIENT_SECRET: ${{ secrets.CLASP_CLIENT_SECRET }}
      CLASP_ID_TOKEN: ${{ secrets.CLASP_ID_TOKEN }}
      CLASP_REFRESH_TOKEN: ${{ secrets.CLASP_REFRESH_TOKEN }}
      CLASP_CLIENT_ID: ${{ vars.CLASP_CLIENT_ID }}
      CLASP_EXPIRY_DATE: ${{ vars.CLASP_EXPIRY_DATE }}
      SCRIPT_ID: ${{ vars.SCRIPT_ID }}
    steps:
      - name: Create .clasprc.json
        run: |
          EOF="$(uuidgen)"

          cat << $EOF > ~/.clasprc.json
          {
            "token": {
              "access_token": "$CLASP_ACCESS_TOKEN",
              "refresh_token": "$CLASP_REFRESH_TOKEN",
              "scope": "https://www.googleapis.com/auth/script.webapp.deploy openid https://www.googleapis.com/auth/drive.metadata.readonly https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/logging.read https://www.googleapis.com/auth/script.projects https://www.googleapis.com/auth/service.management https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.deployments https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/cloud-platform",
              "token_type": "Bearer",
              "id_token": "$CLASP_ID_TOKEN",
              "expiry_date": "$CLASP_EXPIRY_DATE"
            },
            "oauth2ClientSettings": {
              "clientId": "$CLASP_CLIENT_ID",
              "clientSecret": "$CLASP_CLIENT_SECRET",
              "redirectUri": "http://localhost"
            },
            "isLocalCreds": false
          }
          $EOF
      - run: cat ~/.clasprc.json
      - run: exit 1
  prepare:
    name: Prepare
    permissions:
      contents: read
      pull-requests: read
    needs:
      - home
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.prepare.outputs.environment }}
      needs-deploy: ${{ steps.prepare.outputs.needs-deploy }}
    steps:
      - uses: actions/checkout@v4

      - id: prepare
        uses: ./.github/actions/prepare
        with:
          project: web
    timeout-minutes: 5

  check:
    name: Check
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/check
    timeout-minutes: 5

  build:
    name: Build
    needs:
      - prepare
      - check
    runs-on: ubuntu-latest
    outputs:
      build-artifact-name: ${{ steps.build.outputs.build-artifact-name }}
    steps:
      - uses: actions/checkout@v4

      - id: build
        uses: ./.github/actions/build
        with:
          project: web
          build-artifact-content-path: |
            apps/web/dist/
            apps/web/stats.html
    timeout-minutes: 5

  deploy:
    name: Deploy
    permissions:
      actions: read
      contents: read
      deployments: write
      pull-requests: write
    needs:
      - prepare
      - build
    # if: inputs.force-deploy || needs.prepare.outputs.needs-deploy == 'true'
    if: needs.prepare.outputs.needs-deploy == 'true'
    runs-on: ubuntu-latest
    environment: ${{ needs.prepare.outputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/deploy
        with:
          app: web
          build-artifact-name: ${{ needs.build.outputs.build-artifact-name }}
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare-project-name: ${{ vars.CLOUDFLARE_PROJECT_NAME }}
          directory: dist/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-environment: ${{ needs.prepare.outputs.environment }}
          working-directory: apps/web/
    timeout-minutes: 5
